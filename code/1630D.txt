



import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }



    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt")
        int T=Int();
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(T,t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}



class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    //int mod = 1000000007;
    int mod = 998244353;
    Main.FastScanner fs;


    public Solution(PrintWriter out, Main.FastScanner fs) {
        this.out = out;
        this.fs = fs;

    }



    public void solution(int all, int testcase) {
        int n = fs.Int();int m = fs.Int();
        int A[] = new int[n];
        int B[] = new int[m];
        for(int i = 0; i < n; i++) {
            A[i]= fs.Int();
        }

        for(int i = 0; i < m; i++) {
            B[i] = fs.Int();
        }
        int k = B[0];
        for(int i = 1; i < m; i++){
            k = gcd(B[i],k);
        }


        long dp[][] = new long[k][2];
        for(int i = 0; i < dp.length;i++){
            dp[i][1] = -INF;
        }

        for(int i = 0; i < n; i++){
            int ith = i % k;
            long a = Math.max(A[i]+dp[ith][0], -A[i] + dp[ith][1]);
            long b = Math.max(A[i] + dp[ith][1], -A[i] + dp[ith][0]);
            dp[ith][0] = a;
            dp[ith][1] = b;
        }



        long sum1 = 0, sum2 = 0;
        for(int i = 0; i < dp.length;i++){
            sum1 += dp[i][0];
            sum2 += dp[i][1];
        }
        out.println(Math.max(sum1,sum2));
    }

    public int gcd(int num1, int num2) {
        if (num2 != 0){
            return gcd(num2, num1 % num2);
        } else{
            return num1;
        }
    }



}





