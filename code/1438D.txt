// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");



        int T=1;
        for(int t=0;t<T;t++){
            int n=Int();
            int A[]=Arr(n);

            Solution sol1=new Solution(out);
            sol1.solution(A);
        }
        out.close();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int MOD = 1000000007;
    long mod = 1000000007;

    public Solution(PrintWriter out) {
        this.out = out;
    }


    public void solution(int A[]) {
        int n =A.length;

        if(n%2==1){
            List<int[]>res=new ArrayList<>();
            res.add(new int[]{0,1,2});
            for(int i = 2;i<n-1;i+=2){
                if(i+2>=A.length)break;
                res.add(new int[]{i,i+1,i+2});
            }

            for(int i=A.length-1;i>=0;i-=2){
                if(i-2<0)break;
                res.add(new int[]{i,i-1,i-2});
            }

            out.println("YES");
            out.println(res.size());
            for(int p[]:res){
                out.println((p[0]+1)+" "+(p[1]+1)+" "+(p[2]+1));
            }
        }
        else{
            int xor = 0;
            for(int i:A)xor^=i;
            if(xor!=0){
                out.println("NO");
                return;
            }

            n--;
            List<int[]>res=new ArrayList<>();
            res.add(new int[]{0,1,2});
            for(int i = 2;i<n-1;i+=2){
                if(i+2>=A.length)break;
                res.add(new int[]{i,i+1,i+2});
            }

            for(int i=n-1;i>=0;i-=2){
                if(i-2<0)break;
                res.add(new int[]{i,i-1,i-2});
            }

            out.println("YES");
            out.println(res.size());
            for(int p[]:res){
                out.println((p[0]+1)+" "+(p[1]+1)+" "+(p[2]+1));
            }
        }
    }

}
