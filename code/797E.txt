// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");



        int T=1;
        for(int t=0;t<T;t++){
            int n=Int();
            int A[]=new int[n];
            for(int i=0;i<n;i++){
                A[i]=Int();
            }
            int m=Int();
            int q[][]=new int[m][3];
            for(int i=0;i<m;i++){
                q[i][0]=Int();
                q[i][1]=Int();
                q[i][2]=i;
            }

            Solution sol1=new Solution(out);
            sol1.solution(A,q);
        }
        out.close();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int MOD = 1000000007;
    long mod = 1000000007;

    public Solution(PrintWriter out) {
        this.out = out;
    }

    int dp[][];
    public void solution(int A[],int q[][]) {
        dp=new int[A.length][302];
        for(int p[]:dp)Arrays.fill(p,-1);

        for(int p[]:q){
            int index=p[0]-1,k=p[1];
            if(k>=300){
                int cnt=0;
                while(true){
                    index=index+A[index]+k;
                    cnt++;
                    if(index>=A.length)break;
                }
                out.println(cnt);
            }
            else{
                int res = dfs(A,index,k);
                out.println(res);
            }
        }

    }

    public int dfs(int A[],int i,int k){
        if(i>=A.length){
            return 0;
        }
        if(dp[i][k]!=-1)return dp[i][k];
        int res = 0;
        res = 1+ dfs(A,i+A[i]+k,k);
        dp[i][k]=res;
        return res;
    }

}
