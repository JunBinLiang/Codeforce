// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");



        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int MOD = 998244353 ;
    long mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }



    int n;
    long swap[][]=new long[21][21];
    long dp[];
    public void solution() {
        n = fs.Int();
        int A[]=new int[n];
        for(int i=0;i<n;i++){
            A[i]=fs.Int()-1;
        }

        int state = 0;

        int cnt[]=new int[21];
        for(int i = 0;i<A.length;i++){
            int cur = A[i];
            for(int j = 0;j<20;j++){
                swap[cur][j]+=cnt[j];
            }
            cnt[cur]++;
            state = state | (1<<cur);
        }

        dp=new long[(1<<20)+1];
        Arrays.fill(dp,-1);

        long res = dfs(state);
        out.println(res);

    }

    public long dfs(int state){
        if(state==0){
            return 0;
        }
        if(dp[state]!=-1){
            return dp[state];
        }

        long res = Long.MAX_VALUE;
        for(int i = 0; i < 20;i++){
            if((state&(1<<i))==0)continue;
            int newstate = state ^(1<<i);
            long need = 0;
            for(int j =0;j<20;j++){
                if((newstate&(1<<j))!=0){
                    need+=swap[i][j];
                }
            }
            res=Math.min(res,need+dfs(newstate));
        }

        dp[state]=res;
        return res;
    }


}









