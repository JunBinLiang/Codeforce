// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");

        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = 10000000;
    int MOD = 998244353 ;
    long mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }



    public void solution() {

        int n = fs.Int();
        int x = fs.Int();
        int k = fs.Int();
        int A[]=new int[n];
        for(int i = 0; i < n; i++){
            A[i] = fs.Int();
        }
        Arrays.sort(A);

        //[i,j] A[i] <= y <= A[j] where  y%x == 0
        long res = 0;
        for(int i = 0; i < A.length;i++){
            if(cnt(A[i],A[0], x) <k) continue;
            int j = i;
            long same = 0;
            while(j<A.length&&A[j]==A[i]){
                j++;
                same++;
            }

            i = j - 1;

            int l = 0, r = j - 1;
            int pos = -1;
            while(l<=r){
                int mid = l + (r - l) / 2;
                if(cnt(A[i],A[mid],x)>k){
                    l = mid+1;
                }
                else if(cnt(A[i],A[mid],x) < k){
                    r = mid - 1;
                }
                else{
                    pos = mid;
                    r = mid - 1;
                }
            }

            //System.out.println(i+" "+pos);

            if(pos!=-1){
                l = 0; r = j - 1;
                int pos1 = -1;

                while(l<=r){
                    int mid = l + (r - l) / 2;
                    if(cnt(A[i],A[mid],x)>k){
                        l = mid+1;
                    }
                    else if(cnt(A[i],A[mid],x) < k){
                        r = mid - 1;
                    }
                    else{
                        pos1 = mid;
                        l = mid + 1;
                    }
                }
                res += (pos1 - pos + 1) * same;

            }
        }

        out.println(res);
    }

    public int cnt(int r,int l,int x){
        return r/x - ((l - 1)/x);
    }


}








