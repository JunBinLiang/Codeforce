// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");

        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = 10000000;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }




    public void solution() {
        int n = fs.Int();
        int A[]=new int[n];
        int B[]=new int[n];
        for(int i = 0; i < n;i++){
            A[i]=fs.Int();
            A[i]-=i;
            B[i]=A[i];
        }
        Arrays.sort(B);

        long dp[][]=new long[n+1][n+1];
        for(long p[]:dp){
            Arrays.fill(p,Long.MAX_VALUE);
        }

        dp[0][0]=0;

        for(int j = 1; j < dp[0].length;j++){
            dp[1][j] = Math.abs(A[0]-B[j-1]);
        }

        for(int i = 2; i < dp.length;i++){
            int cur = A[i-1];
            long mn = Long.MAX_VALUE;
            for(int j = 1; j < dp[0].length;j++){
                mn = Math.min(mn,dp[i-1][j]);
                int end = B[j-1];
                int dif = Math.abs(cur-end);
                dp[i][j]=dif+mn;
            }
        }


        long res = Long.MAX_VALUE;
        for(int i = 0; i <=n;i++){
            res=Math.min(res,dp[n][i]);
        }
        out.println(res);

    }


}

//   a b c d e
//a
//b
//c
//d
//e
