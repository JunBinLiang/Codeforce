// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    //int mod = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }


    public void solution(int testcase) {
        int n = fs.Int();
        int B[]=new int[n];
        int C[]=new int[n];
        long D[]=new long[n];
        long total = 0;
        for(int i =0;i<n;i++){
            B[i]=fs.Int();
            total += B[i];
        }
        for(int i =0;i<n;i++){
            C[i]=fs.Int();
            total += C[i];
            D[i] = B[i] + C[i];
        }

        if((total%(2*n)) != 0){
            out.println(-1);
            return;
        }
        long sum = total / (2 * n);
        long A[]=new long[n];
        for(int i = 0; i < n; i++){
            if((D[i]-sum) % n != 0){
                out.println(-1);
                return;
            }
            long a = (D[i] - sum) / n;
            A[i] = a;
        }


        int cnt[]=new int[41];
        for(long i:A){
            for(int j = 0; j < 41; j++){
                if((i&(1l<<j))!=0){
                    cnt[j]++;
                }
            }
        }


        for(int i = 0; i < A.length;i++){
            long and = 0;
            long or = 0;
            for(int j = 0; j < 41; j++){
                if((A[i] & (1l<<j))!=0){
                    or += (1l<<j)*n;
                    and += (1l<<j)*cnt[j];
                }
                else{
                    or += (1l<<j)*cnt[j];
                }
            }
            if(and!=B[i]&&or!=C[i]){
                out.println(-1);
                return;
            }
        }




        for(long i:A){
            out.println(i);
        }

    }



}




