// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;

    int match[];
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;

    }

    public void solution(int testcase) {
        int n = fs.Int();
        int A[] = new int[n];
        for(int i = 0; i < n; i++){
            A[i] = fs.Int();
        }

        int l[] = new int[5001];
        Arrays.fill(l, INF);
        int r[] = new int[5001];
        for(int i = 0; i < A.length;i++){
            l[A[i]] = Math.min(i,l[A[i]]);
            r[A[i]] = i;
        }


        int xors[][]=new int[n][n];
        boolean seen[] = new boolean[5001];
        for(int i = 0; i < n;i++){
            int xor = 0;
            for(int j = i; j < n;j++){
                if(!seen[A[j]]){
                    seen[A[j]] = true;
                    xor ^= A[j];
                }
                xors[i][j] = xor;
            }

            for(int j = i; j < n; j++){
                seen[A[j]] = false;
            }
        }


        int dp[] = new int[n];
        for(int i = 0; i < A.length; i++){
            int ll = i;
            for(int j = i; j >= 0; j--){
                if(r[A[j]] > i){
                    break;
                }
                ll = Math.min(ll, l[A[j]]);
                int xor = xors[ll][i];
                int sum = xor;
                if(ll > 0){
                    sum += dp[ll-1];
                }

                if(j == ll){
                    dp[i] = Math.max(dp[i],sum);
                }
            }
            if(i > 0)dp[i] =Math.max(dp[i], dp[i - 1]);
        }
        out.println(dp[n - 1]);
    }

}

