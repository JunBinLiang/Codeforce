// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");
        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = 10000000;
    int MOD = 998244353 ;
    long mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }



    public void solution() {

        int t = fs.Int();
        while(t>0){
            t--;
            int n =fs.Int();
            int res = INF;
            int A[]=new int[n];
            for(int i =0;i<n;i++){
                A[i]=fs.Int();
            }

            int dp[]=new int[2010];
            Arrays.fill(dp,100000000);
            dp[A[0]]=A[0];

            for(int i=1;i<A.length;i++){
                int cur[]=new int[dp.length];
                Arrays.fill(cur,100000000);
                int x = A[i];
                for(int d = 0;d<dp.length;d++){
                    //move right
                    if(d+x<dp.length){
                        cur[d+x]=Math.min(cur[d+x],Math.max(dp[d],x+d));
                    }
                    //move left
                    if(d>=x){
                        cur[d-x]=Math.min(cur[d-x],dp[d]);
                    }
                    else{
                        int dif = Math.abs(d-x);
                        cur[0]=Math.min(cur[0],dif+dp[d]);
                    }
                }
                //System.out.println(Arrays.toString(cur));
                dp=cur;
            }

            for(int j=0;j<dp.length;j++){
                res=Math.min(res,dp[j]);
            }

            out.println(res);
        }
    }
}
