#include<iostream>
#include<vector>
#include<string>
#include<map>
#include<unordered_map>
#include<set>
#include<unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define s second

//Some predefined templates
template <typename T>
ostream& operator <<(ostream& out, const vector<T>& a) {
  out << "["; bool first = true;
  for (auto v : a) { out << (first ? "" : ", "); out << v; first = 0;} 
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const unordered_map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}


int to_int(string& s) {
  int res = 0;
  for(char c : s) {
    res = res * 10 + (c - '0');
  }
  return res;
}

int mod = 1000000007;


void solve(int n, int k) {
    long long f[32];
    f[0] = 1;
    for(int i = 1; i < 32; i++) {
      f[i] = f[i - 1] * n;
      f[i] %= mod;
    }
    ll sum = 0;

    for(int i = 30; i >= 0; i--) {
      int bit = 1 << i;
      if(k >= bit) {
        sum += f[i];
        sum %= mod;
        k -= bit;
      }
    }
    cout<<sum<<endl;
}

int main()
{
  int t;
  cin>>t;
  while(t--){
    int n, k;
    cin>>n>>k;
    solve(n, k);
  }

  return 0;
}

