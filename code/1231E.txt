#include<iostream>
#include<vector>
#include<string>
#include<map>
#include<unordered_map>
#include<set>
#include<unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define s second

//Some predefined templates
template <typename T>
ostream& operator <<(ostream& out, const vector<T>& a) {
  out << "["; bool first = true;
  for (auto v : a) { out << (first ? "" : ", "); out << v; first = 0;} 
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const unordered_map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}

ll gcd(ll x, ll y) {
    return (y == 0 ? x : gcd(y, x % y));
}
ll lcm(ll x, ll y) {
    return x * y / gcd(x, y);
}


int to_int(string& s) {
  int res = 0;
  for(char c : s) {
    res = res * 10 + (c - '0');
  }
  return res;
}


int MOD = 998244353;
int mod = 1000000007;
int INF = INT_MAX;


bool ana(string& s, string& t) {
  vector<int> a(26);
  for(char c : s) {
    a[c - 'a']++;
  }

  for(char c : t) {
    a[c - 'a']--;
    if(a[c - 'a'] < 0) {
      return false;
    }
  }
  return true;
}

void solve(string& s, string& t) {
  if(!ana(s, t)) {
    cout << -1 << endl; 
    return;
  }
  int n = s.size();
  int res = n;

  int x = 0;
  for(int i = 0; i < s.size(); i++) {
    if(s[i] == t[x]) {
      x++;
    }
  }
  res = min(res, (int)(t.size() - x));

  for(int i = 0; i < s.size(); i++) {
    int cnt = i + 1;
    int k = i + 1;
    for(int j = 0; j < s.size() && k < t.size(); j++) {
      if(s[j] == t[k]) {
        k++;
      } else {

      }
    }
    res = min(res, (int)(cnt + (t.size() - k)));
  }

  cout << res << endl;
}


int main()
{
  int t = 1;
  cin >> t;
  while(t--) {
    int n; cin >> n;
    string a, b;
    cin >> a >> b;
    solve(a, b);
  } 

  return 0;
}


