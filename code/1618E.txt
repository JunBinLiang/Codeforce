// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=Int();
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;

    //int mu[];
    //int musum[];

    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
        //muinit(100000);
    }


    /*public void muinit(int n){
        int N = n + 10;
        mu = new int[N];
        musum = new int[N];
        mu[1] = 1;


        boolean seen[] = new boolean[N];
        int primes[] = new int[N];
        int cnt = 0;

        for (int i = 2; i < mu.length; i ++ ) {
            if (!seen[i]) {
                primes[cnt++] = i;
                mu[i] = -1;
            }
            for (int j = 0; primes[j] * i < N; j ++ ) {
                seen[primes[j] * i] = true;
                if (i % primes[j] == 0) break;
                mu[primes[j] * i] = -mu[i];
            }
        }

        for (int i = 1; i < N; i ++ ){
            musum[i] = musum[i - 1] + mu[i];
        }
    }*/




    public void solution(int testcase) {
        int n = fs.Int();
        long B[]=new long[n];
        long sum = 0;
        for(int i = 0; i < n; i++){
            B[i]=fs.Int();
            sum += B[i];
        }
        long res[] = new long[n];
        if((sum % ((1l + n) * n / 2)) != 0){
            out.println("NO");
            return;
        }

        long avg = (sum / ((1l + n) * n / 2));

        for(int i = 0; i < n; i++){
            int j = (i + 1) % n;
            long dif = B[j] - B[i];
            dif -= avg;
            if(Math.abs(dif) % n != 0){
                out.println("NO");
                return;
            }
            res[j] = -(dif / n);
            if(res[j] < 1) {
                out.println("NO");
                return;
            }
        }


        out.println("YES");
        for(long i:res){
            out.print(i+" ");
        }out.println();
    }

}

