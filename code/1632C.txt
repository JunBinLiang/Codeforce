



import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }



    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt")
        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(T,t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}



class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    //int mod = 998244353;
    Main.FastScanner fs;


    public Solution(PrintWriter out, Main.FastScanner fs) {
        this.out = out;
        this.fs = fs;

    }


    public void solution(int all, int testcase) {
        int t = fs.Int();
        while(t>0) {
            t--;
            int a = fs.Int();
            int b = fs.Int();
            int res = Integer.MAX_VALUE;
            int cnt = 0;

            while(true) {
                int or = a | b;
                res = Math.min(res, 1 + cnt + (or - b));
                res = Math.min(res,  cnt + (b - a));

                int x = a;
                for(int j = 26; j >= 0;j--){
                    if(((b & (1 << j)) == 0 ) && ((x & (1 << j)) != 0)) {
                        break;
                    }
                    if((b & (1 << j)) != 0) {
                        if(((x & (1 << j)) == 0)) {
                            res = Math.min(res, (1 << j) - x + 1 + cnt);
                        }
                    }
                    if(((x & (1 << j)) != 0)) {
                        x -= (1 << j);
                    }
                }




                if(issub(a,b))break;
                b++;
                cnt++;
            }
            out.println(res);
        }
    }

    public boolean issub(int a, int b) {
        if(((a & b) == a) && ((a | b) == b))return true;
        return false;
    }




}


//a : 0111

//b : 1100
