// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");

        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }


    public void solution(int testcase) {
        int n = fs.Int();
        int k =fs.Int();
        int x = fs.Int();
        long A[]=new long[n];
        int cnt = 0;
        int zero = 0;
        for(int i = 0; i < n; i++){
            A[i]=fs.Int();
            if(A[i]<0){
                cnt++;
            }
            if(A[i]==0){
                zero++;
            }
        }

        boolean flag = false;
        if(zero>0){
            if(cnt % 2 == 1){
                for(int i = 0; i < A.length && k > 0; i++){
                    if(A[i]==0){
                        k--;
                        A[i]+=x;
                    }
                }
            }
            else{
                for(int i = 0; i < A.length;i++){
                    if(A[i]==0){
                        A[i]-=x;
                        k--;
                        break;
                    }
                }
                for(int i = 0; i < A.length && k > 0; i++){
                    if(A[i]==0){
                        k--;
                        A[i]+=x;
                    }
                }
            }
        }else{
            if(cnt%2==0){
                flag=true;
            }
        }


        PriorityQueue<long[]>pq=new PriorityQueue<>((a,b)->{
            return Long.compare(Math.abs(a[0]),Math.abs(b[0]));
        });
        for(int i = 0; i < A.length;i++){
            pq.add(new long[]{A[i],i});
        }
        while(k>0){
            k--;
            long top[]=pq.poll();

            if(top[0]==0){
                if(flag){
                    flag = false;
                    top[0] -= x;

                }
                else{
                    top[0]+=x;
                }
                pq.add(top);
                continue;
            }



            if(top[0]>0){
                if(flag){
                    top[0]-=x;
                    if(top[0]<0)flag = false;
                }
                else{
                    top[0]+=x;
                }
            }
            else{
                if(flag){
                    top[0]+=x;
                    if(top[0]>=0){
                        flag = false;
                    }
                }
                else{
                    top[0]-=x;
                }
            }
            //System.out.println(Arrays.toString(top));
            pq.add(top);
        }


        while(pq.size()>0){
            long top[]=pq.poll();
            A[(int)(top[1])]=top[0];
        }
        for(int i = 0; i < A.length;i++){
            out.print(A[i]+" ");
        }
    }





}




