


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(T,t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;


    public Solution(PrintWriter out, Main.FastScanner fs) {
        this.out = out;
        this.fs = fs;

    }


    public void solution(int all, int testcase) {
        int n = fs.Int();
        int m = fs.Int();
        int A[] = new int[n];
        int cnt[] = new int[m + 1];
        Map<Integer,List<Integer>> f = new HashMap<>();
        List<Integer>res = new ArrayList<>();
        int B[] = new int[m+1];
        for(int i = 0; i < n; i++){
            A[i] = fs.Int();
            if(A[i] <= m) {
                cnt[A[i]]++;
            }
            if(!f.containsKey(A[i])){
                f.put(A[i],new ArrayList<>());
            }
            f.get(A[i]).add(i);
        }

        for(int i = 1; i <= m; i++){
            if(cnt[i]==0)continue;
            for(int j = i; j <=m; j+= i) {
                B[j]+=cnt[i];
            }
        }

        int mx = 0; int M = 1;
        for(int i = 1; i <= m; i++){
            if(B[i] > mx) {
                mx = B[i];
                M = i;
            }
        }

        for(int i = 1; i <= m; i++) {
            if(M % i == 0 && f.containsKey(i)){
                res.addAll(f.get(i));
            }
        }
        Collections.sort(res);
        out.println(M + " "+ res.size());
        StringBuilder str = new StringBuilder();
        for(int i : res) {
            str.append(i + 1).append(" ");
        }
        out.println(str.toString());
    }


}

