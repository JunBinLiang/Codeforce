#include<iostream>
#include<vector>
#include<string>
#include<map>
#include<unordered_map>
#include<set>
#include<unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define s second

//Some predefined templates
template <typename T>
ostream& operator <<(ostream& out, const vector<T>& a) {
  out << "["; bool first = true;
  for (auto v : a) { out << (first ? "" : ", "); out << v; first = 0;} 
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const unordered_map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}


int to_int(string& s) {
  int res = 0;
  for(char c : s) {
    res = res * 10 + (c - '0');
  }
  return res;
}

int mod = 1000000007;
int INF = INT_MAX;


void solve(int a, int b, int c, int m) {
  int sum = a + b  + c - 1;
  int k = sum - m;
  if(k < 2) {
    cout << "NO" << endl;
    return;
  }

  vector<int> A = {a, b, c};
  sort(A.begin(), A.end());
  if(A[2] > A[0] + A[1]) {
    if((A[0] + A[1]) * 2 >= k) {
      cout << "YES" << endl;
    } else {
      cout << "NO" << endl;
    }
  }
  else {
    cout << "YES" << endl;
  }
}

int main()
{
  int t;
  cin >> t;
  while(t--) {
    int a, b ,c , m;
    cin >> a >> b >> c >> m;
    solve(a, b, c ,m);
  } 

  return 0;
}

