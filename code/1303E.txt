// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");



        int T=Int();
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = 10000000;
    int MOD = 998244353 ;
    long mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }


    public void solution() {
        String s=fs.Str();
        String t=fs.Str();

        if(issub(t,s)){
            out.println("YES");
            return;
        }

        //preprocessing
        int next[][]=new int[s.length()][26];
        for(int p[]:next){
            Arrays.fill(p,-1);
        }

        for(int i=0;i<s.length();i++){
            for(int c=0;c<26;c++){
                for(int j=i;j<s.length();j++){
                    int d = s.charAt(j)-'a';
                    if(d==c){
                        next[i][c]=j;
                        break;
                    }
                }
            }
        }


        for(int i=0;i<t.length()-1;i++){
            String a=t.substring(0,i+1);
            String b=t.substring(i+1);
            int dp[][]=new int[a.length()+1][b.length()+1];
            for(int p[]:dp){
                Arrays.fill(p,INF);
            }


            dp[0][0]=-1;
            for(int y=1;y<=b.length();y++){
                int c = b.charAt(y-1)-'a';
                int pre = dp[0][y-1];
                if(pre+1>=s.length())break;
                int next1=next[pre+1][c];
                if(next1!=-1)dp[0][y]=next1;
            }

            for(int x=1;x<=a.length();x++){
                int c = a.charAt(x-1)-'a';
                int pre = dp[x-1][0];
                if(pre+1>=s.length())break;
                int next1=next[pre+1][c];
                if(next1!=-1)dp[x][0]=next1;

            }

            for(int x=1;x<=a.length();x++){
                int c1 = a.charAt(x-1)-'a';
                for(int y=1;y<=b.length();y++){
                    int c2=b.charAt(y-1)-'a';

                    int len1 = dp[x-1][y];
                    if(len1+1<s.length()){
                        int next1=next[len1+1][c1];
                        if(next1!=-1){
                            dp[x][y]=Math.min(dp[x][y],next1);
                        }
                    }

                    int len2=dp[x][y-1];
                    if(len2+1<s.length()){
                        int next2=next[len2+1][c2];
                        if(next2!=-1){
                            dp[x][y]=Math.min(dp[x][y],next2);
                        }
                    }
                }
            }



            if(dp[a.length()][b.length()]<s.length()){

                /*System.out.println(a+"   "+b);
                for(int p[]:next){
                    System.out.println(Arrays.toString(p));
                }
                System.out.println();
                for(int p[]:dp){
                    System.out.println(Arrays.toString(p));
                }*/

                out.println("YES");
                return;
            }
        }
        out.println("NO");

    }

    public boolean issub(String a,String b){
        int j = 0;
        for(int i=0;i<b.length();i++){
            if(a.charAt(j)==b.charAt(i)){
                j++;
            }
            if(j>=a.length()){
                return true;
            }
        }
        return false;
    }



}








