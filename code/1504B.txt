#include<iostream>
#include<vector>
#include<string>
#include<map>
#include<unordered_map>
#include<set>
#include<unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define s second

//Some predefined templates
template <typename T>
ostream& operator <<(ostream& out, const vector<T>& a) {
  out << "["; bool first = true;
  for (auto v : a) { out << (first ? "" : ", "); out << v; first = 0;} 
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const unordered_map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}


int to_int(string& s) {
  int res = 0;
  for(char c : s) {
    res = res * 10 + (c - '0');
  }
  return res;
}

int mod = 1000000007;
int INF = INT_MAX;



void solve(string& s, string& t) {
  int n = s.size();
  int a = 0, b = 0;
  int same = 0, dif = 0;

  for(int i = 0; i < n; i++) {
    if(s[i] == '0') {
      a++;
    } else {
      b++;
    }

    if(s[i] == t[i]) {
      same++;
    } else {
      dif++;
    }

    if(a == b) {
      // can flip
      if(same != 0 && dif != 0) {
        cout << "No" << endl;
        return;
      }
      same = 0;
      dif = 0;
    }
  }
  if(dif > 0) {
    cout << "No" << endl;
    return;
  }
  cout << "YES" << endl;
}

int main()
{
  int t;
  cin >> t;
  while(t--) {
    int n; cin >> n;
    string a, b;
    cin >> a >> b;
    solve(a, b);
  } 

  return 0;
}

