// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");

        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }




    public void solution() {
        String s = fs.Str();
        String t = fs.Str();
        int A[]=new int[s.length()];
        Arrays.fill(A,INF);
        for(int i = 0; i < s.length();i++){
            int x = 0;
            for(int j = i; j < s.length();j++){
                if(s.charAt(j)==t.charAt(x)){
                    x++;
                }
                if(x==t.length()){
                    A[i]=j;
                    break;
                }
            }
        }

        int n = s.length();
        int dp[][]=new int[n][n+1];

        for(int i = 0; i < s.length();i++){
            for(int j = 0; j <= i; j++){
                if(i+1<s.length()){
                    dp[i+1][j] = Math.max(dp[i+1][j],dp[i][j]);
                    dp[i+1][j+1] = Math.max(dp[i+1][j+1],dp[i][j]);
                }
                if(A[i]!=Integer.MAX_VALUE){
                    int x = A[i];
                    int len = x - i + 1;
                    int del = len - t.length();
                    int add = 0;
                    if(i-1>=0)add=dp[i-1][j];
                    dp[x][j + del] = Math.max(dp[x][j + del], 1 + add);
                }
            }

        }


        for(int i = 0; i <=n; i++){
            out.print(dp[n-1][i]+" ");
        }

    }

}
