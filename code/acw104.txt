断开之后则可以看成是排成一行，引用上面的引理
则相当于求|S[k + 1] - S[k]| + |S[k + 2] - S[k]| + … + |S[n] - S[k]| + |S[n] - S[k] + S[1]| + |S[n] - S[k] + S[2]| +…+|S[n] - S[k] + S[k]|的最小值，由于S[n] = 0
则相当于求|S[1] - S[k]| + |S[2] - S[k]| +…+ |S[k] - S[k]| + |S[k + 1] - S[k]| +…+ |S[n] - S[k]| 的最小值，其中k∈ [1,n]



// Don't place your source in a package
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;








// Please name your class Main
public class Main {
	static FastScanner fs=new FastScanner();
	static class FastScanner {//scanner from SecondThread
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		int Int() {
			return Integer.parseInt(next());
		}

		long Long() {
			return Long.parseLong(next());
		}

		String Str(){
			return next();
		}
	}


	public static void main (String[] args) throws java.lang.Exception {
		PrintWriter out = new PrintWriter(System.out);
		int T=1;
		for(int t=0;t<T;t++){
			int n=Int();
			int A[]=new int[n];
			for(int i=0;i<n;i++){
			    A[i]=Int();
            }
			Sol sol=new Sol();
			sol.solution(out,A);
		}
		out.flush();

	}

	public static int Int(){
		return fs.Int();
	}
	public static long Long(){
		return fs.Long();
	}
	public static String Str(){
		return fs.Str();
	}

}



class Sol{
    public void solution(PrintWriter out,int A[]){
       Arrays.sort(A);
       int mid=A[A.length/2];
       long sum=0;
       
       for(int i:A){
           sum+=Math.abs(mid-i);
       }
       
       out.println(sum);
	}
	

    
}
