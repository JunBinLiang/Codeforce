#include<iostream>
#include<vector>
#include<string>
#include<map>
#include<unordered_map>
#include<set>
#include<unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <queue>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define s second
#define ve vector
#define FOR(i, a, b) for (int i = a; i < b; ++i)

//Some predefined templates
template <typename T>
ostream& operator <<(ostream& out, const vector<T>& a) {
  out << "["; bool first = true;
  for (auto v : a) { out << (first ? "" : ", "); out << v; first = 0;} 
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const unordered_map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}

ll gcd(ll x, ll y) {
    return (y == 0 ? x : gcd(y, x % y));
}
ll lcm(ll x, ll y) {
    return x * y / gcd(x, y);
}


int to_int(string& s) {
  int res = 0;
  for(char c : s) {
    res = res * 10 + (c - '0');
  }
  return res;
}


int MOD = 998244353;
int mod = 1000000007;
int INF = INT_MAX;


// 33
void solve() {
  int n;
  cin >> n;
  ve<string> a;
  int odd = 0;
  FOR(i, 0, n) {
    string s; cin >> s;
    a.pb(s);
    if(s.size() % 2 == 1) {
      odd++;
    }
  }

  int one = 0, zero = 0;
  FOR(i, 0, n) {
    string& s = a[i];
    for(char& c : s) {
      if(c == '1')one++;
      else zero++;
    }
  }

  if(one % 2 == 0 && zero % 2 == 0) {
    cout << n << endl;//odd can not be odd times
  }
  else if(one % 2 == 1 && zero % 2 == 1) {
    if(odd % 2 == 0 && odd >= 2) {
      cout << n << endl;
    } else {
      cout << n - 1 << endl;
    }
  } else {
    //odd, even one of them is odd
    //there must be odd
    cout << n << endl;
  }

}

 
int main()
{
  int t = 1;
  cin >> t;
  while(t--) {
    solve();
  } 

  return 0;
}


