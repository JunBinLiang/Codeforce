// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");

        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = 10000000;
    int MOD = 998244353 ;
    long mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }



    public void solution() {

        int n =fs.Int();int q=fs.Int();
        int A[]=new int[n];
        int cnt[]=new int[200000+10];
        int f[]=new int[200000+10];


        for(int i = 0 ; i < n; i++){
            A[i]=fs.Int();
            cnt[A[i]]++;
            f[A[i]]=i;
        }

        int res = 0;
        int pre = 0;

        int sum = 0;
        int mx = 0;
        Set<Integer>set=new HashSet<>();
        for(int i = 0; i < A.length;i++){
            int r = f[A[i]];
            if(!set.contains(A[i])){
                set.add(A[i]);
                sum+=cnt[A[i]];
                mx=Math.max(mx,cnt[A[i]]);
            }

            pre = Math.max(pre,r);

            if(pre == i){
                res+=(sum-mx);
                mx=0;
                sum=0;
            }

        }
        out.println(res);

    }





}


