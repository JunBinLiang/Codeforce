#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <queue>
#include <list>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define se second
#define ve vector
#define FOR(i, a, b) for (int i = a; i < b; ++i)
#define RFOR(i, a, b) for (int i = a; i >= b; i--)
#define W while
#define um unordered_map
#define us unordered_set

// Some predefined templates
template <typename T>
ostream &operator<<(ostream &out, const vector<T> &a)
{
  out << "[";
  bool first = true;
  for (auto v : a)
  {
    out << (first ? "" : ", ");
    out << v;
    first = 0;
  }
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream &operator<<(ostream &out, const map<U, T, Cmp> &a)
{
  out << "{";
  bool first = true;
  for (auto &p : a)
  {
    out << (first ? "" : ", ");
    out << p.first << ":" << p.second;
    first = 0;
  }
  out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream &operator<<(ostream &out, const unordered_map<U, T, Cmp> &a)
{
  out << "{";
  bool first = true;
  for (auto &p : a)
  {
    out << (first ? "" : ", ");
    out << p.first << ":" << p.second;
    first = 0;
  }
  out << "}";
  return out;
}

ll gcd(ll x, ll y)
{
  return (y == 0 ? x : gcd(y, x % y));
}
ll lcm(ll x, ll y)
{
  return x * y / gcd(x, y);
}

int to_int(string &s)
{
  int res = 0;
  for (char c : s)
  {
    res = res * 10 + (c - '0');
  }
  return res;
}


int MOD = 998244353;
int mod = 1000000007;
int INF = INT_MAX;


//50
void solve(int n) {
  if(n % 2 == 0) {
    cout << n / 2 << " " << n / 2 << endl;
    return;
  }

  ll LCM = 10000000000000000ll;
  int x = -1, y = -1;
  for(int i = 1; i * i <= n; i++) {
    if(n % i == 0) {
      int a = i;
      int b = n / i;

      ll l1 = a * (b - 1);
      if(l1 < LCM && b > 1) {
        LCM = l1;
        x = a;
        y = a * (b - 1);
      }

      ll l2 = b * (a - 1);
      if(l2 < LCM && a > 1) {
        LCM = l2;
        x = b;
        y = b * (a - 1);
      }
      
    }
  }
  cout << x << " " << y << endl;
  

}

int main()
{
  int t = 1;
  cin >> t;
  W (t--)
  {
    int n;
    cin >> n;
    solve(n);
  }
  return 0;
}





