


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(T,t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;


    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;

    }


    public void solution(int all,int testcase) {
        int n = fs.Int();
        int K = fs.Int();
        int dp[][] = new int[K + 1][n * 30];
        for(int i=0;i<dp.length;i++){
            Arrays.fill(dp[i],-1);
        }
        dp[0][0] = 0;

        long A[] = new long[n];
        for(int i = 0; i < n; i++){
            A[i] = fs.Long();
            int a = 0, b = 0;
            while(A[i]%2==0){
                a++;
                A[i] /= 2;
            }
            while(A[i] % 5 == 0){
                b++;
                A[i] /= 5;
            }

            int cur[][] = new int[dp.length][dp[0].length];
            for(int x = 0; x < cur.length;x++){
                for(int y = 0; y < cur[0].length;y++){
                    cur[x][y] = dp[x][y];
                }
            }

            for(int k =1; k <= K; k++){
                for(int j = 0; j < dp[0].length; j++){
                    if(j >= b && k > 0 && dp[k - 1][j - b] !=-1){
                        cur[k][j] = Math.max(cur[k][j], dp[k - 1][j - b] + a);
                    }
                }
            }
            dp = cur;
        }


        int res = 0;
        for(int i = 0; i < dp[0].length;i++){
            res = Math.max(res, Math.min(dp[K][i],i));
        }
        out.println(res);

    }



}

