#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <queue>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define se second
#define ve vector
#define FOR(i, a, b) for (int i = a; i < b; ++i)

// Some predefined templates
template <typename T>
ostream &operator<<(ostream &out, const vector<T> &a)
{
  out << "[";
  bool first = true;
  for (auto v : a)
  {
    out << (first ? "" : ", ");
    out << v;
    first = 0;
  }
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream &operator<<(ostream &out, const map<U, T, Cmp> &a)
{
  out << "{";
  bool first = true;
  for (auto &p : a)
  {
    out << (first ? "" : ", ");
    out << p.first << ":" << p.second;
    first = 0;
  }
  out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream &operator<<(ostream &out, const unordered_map<U, T, Cmp> &a)
{
  out << "{";
  bool first = true;
  for (auto &p : a)
  {
    out << (first ? "" : ", ");
    out << p.first << ":" << p.second;
    first = 0;
  }
  out << "}";
  return out;
}

ll gcd(ll x, ll y)
{
  return (y == 0 ? x : gcd(y, x % y));
}
ll lcm(ll x, ll y)
{
  return x * y / gcd(x, y);
}

int to_int(string &s)
{
  int res = 0;
  for (char c : s)
  {
    res = res * 10 + (c - '0');
  }
  return res;
}

int MOD = 998244353;
int mod = 1000000007;
ll INF = 1000000000000000ll;




void solve(ve<int>& a) {
    int n = a.size();
    ve<int> res;
    for(int i = n; i >= 1; i--) {
      int index = -1;
      for(int j = 0; j < i; j++) {
        if(a[j] == i) {
          index = j;
          break;
        }
      }

      int size = i;
      res.pb((index + 1) % size);
      ve<int> b;
      for(int j = index + 1; j < size; j++) {
        b.pb(a[j]);
      }

      for(int j = 0; j <= index; j++) {
        b.pb(a[j]);
      }
      for(int j = size; j < a.size(); j++) {
        b.pb(a[j]);
      }
      for(int j = 0; j < a.size(); j++) {
        a[j] = b[j];
      }
     // cout << a << endl;
    }

    reverse(res.begin(), res.end());
    for(int i : res) {
      cout << i << " ";
    }
    cout << endl;
}

int main()
{
  int t = 1;
  cin >> t;
  while (t--)
  {
    int n; cin >> n;
    ve<int> a;
    FOR(i, 0, n) {
      int x;
      cin >> x;
      a.pb(x);
    }
    
    solve(a);
  }

  return 0;
}
