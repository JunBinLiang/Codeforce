// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");



        int T=1;
        for(int t=0;t<T;t++){
            //int n=Int();
            //int k=Int();
            int n=Int();int k=Int();
            int A[]=Arr(n);

            Solution sol1=new Solution(out);
            sol1.solution(A,k);
        }
        out.close();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int MOD = 1000000007;
    long mod = 1000000007;

    public Solution(PrintWriter out) {
        this.out = out;
    }


    public void solution(int A[],int k) {
        long res = 0;
        long bonus = 0;
        Arrays.sort(A);


        for(int i=A.length-1;i>=0;i--){
            if(bonus>=0){
                res+=bonus;
            }
            bonus+=A[i];
            if(bonus<0){
                if(i<=k)break;
                int j = i-1;
                List<Integer>list=new ArrayList<>();
                list.add((int)(bonus));
                while(j>k){
                    list.add(A[j]);
                    j--;
                }
                PriorityQueue<Long>pq=new PriorityQueue<>((a,b)->{
                    return Long.compare(b,a);
                });

                while(k>=0){
                    pq.add(0l);k--;
                }


                long pre = 0;
                for(int index=0;index<list.size();index++){
                    long top=pq.poll();
                    top+=list.get(index);
                    res+=top;
                    pq.add(top);
                }

                while(pq.size()>0&&k>0){
                    res-=pq.poll();
                    k--;
                }
                break;
            }
        }


        out.println(res);
    }


}


