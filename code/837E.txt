


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(T,t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;


    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;

    }


    public void solution(int all,int testcase) {
        long x = fs.Long();
        long y = fs.Long();
        long res = 0;
        while(y != 0){
            long g = gcd(x,y);
            if(g==y){
                res++;
                break;
            }
            long mx = 0;
            for(long j = 1; j * j <= x; j++){
                if(x%j!=0)continue;
                long a = j;
                long b = x / j;
                //System.out.println(b+"  "+y+"   "+(y / b  * b));

                if(a%g==0&&a!=g){
                    mx = Math.max(mx, y / a  * a);
                    //System.out.println(a+"  "+y+"   "+(y / a  * a));
                }
                if(b%g==0&&b!=g){
                    mx = Math.max(mx, y / b  * b);
                    //System.out.println("b "+b+"  "+y+"   "+(y / b  * b));
                }
            }
            //System.out.println(mx);
            //System.out.println();
            res += (y - mx) / g;
            y = mx;

        }

        out.println(res);

    }

    public long gcd(long num1, long num2) {
        if (num2 != 0) {
            return gcd(num2, num1 % num2);
        } else {
            return num1;
        }
    }
}

