// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");



        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = 10000000;
    int MOD = 998244353 ;
    long mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }


    public void solution() {
        int n=fs.Int();
        int A[]=new int[n];
        int res=Integer.MAX_VALUE;
        for(int i=0;i<A.length;i++){
            A[i]=fs.Int();
        }

        int dp[][]=new int[n][n];
        for(int i=0;i<dp.length;i++)Arrays.fill(dp[i],1000000);

        int pointer[]=new int[n];
        int sums[]=new int[n];
        int mins[]=new int[n];

        Arrays.fill(mins,INF);
        for(int i=0;i<pointer.length;i++){
            pointer[i]=i;
            sums[i]=A[i];
        }


        for(int i=0;i<n;i++){
            int sum=0;
            dp[i][0]=i;
            int cnt=-1;

            for(int j=i;j>=1;j--){
                sum+=A[j];cnt++;

                /*if(i==9&&j==7){
                    System.out.println(sum);
                    System.out.println(Arrays.toString(pointer));
                    System.out.println(Arrays.toString(sums));
                    System.out.println(Arrays.toString(mins));
                }*/

                while(pointer[j-1]>=0&&sums[j-1]<=sum){
                    int index=pointer[j-1];
                    mins[j-1]=Math.min(mins[j-1],dp[j-1][index]);
                    dp[i][j]=Math.min(dp[i][j],cnt+mins[j-1]);
                    pointer[j-1]--;
                    if(pointer[j-1]>=0){
                        sums[j-1]+=A[pointer[j-1]];
                    }
                }


                dp[i][j]=Math.min(dp[i][j],cnt+mins[j-1]);

            }
        }

        /*System.out.println();
        for(int p[]:dp){
            System.out.println(Arrays.toString(p));
        }*/

        for(int i=0;i<n;i++){
            res=Math.min(res,dp[n-1][i]);
        }
        out.println(res);

    }

    public int get(int A[],int i){
        if(i<0)return 0;
        return A[i];
    }

}




