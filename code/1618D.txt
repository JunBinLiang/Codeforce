#include<iostream>
#include<vector>
#include<string>
#include<map>
#include<unordered_map>
#include<set>
#include<unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <queue>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define s second
#define ve vector
#define FOR(i, a, b) for (int i = a; i < b; ++i)

//Some predefined templates
template <typename T>
ostream& operator <<(ostream& out, const vector<T>& a) {
  out << "["; bool first = true;
  for (auto v : a) { out << (first ? "" : ", "); out << v; first = 0;} 
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const unordered_map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}

ll gcd(ll x, ll y) {
    return (y == 0 ? x : gcd(y, x % y));
}
ll lcm(ll x, ll y) {
    return x * y / gcd(x, y);
}


int to_int(string& s) {
  int res = 0;
  for(char c : s) {
    res = res * 10 + (c - '0');
  }
  return res;
}


int MOD = 998244353;
int mod = 1000000007;
int INF = INT_MAX;


//23
void solve(vector<int>& a, int k) {
  sort(a.begin(), a.end());
  int res = 0;
  int n = a.size();

  ve<bool> take(n);
  int K = k;
  for(int i = n - 1; i >= 0 && k; i--) {
    for(int j = n - K - 1; j >= 0 && k; j--) {
      if(take[j])continue;
      take[j] = take[i] = true;
      int add = a[j] / a[i];
      k--;
      res += add;
      break;
    }
  }



  for(int i = 0; i < n; i++) {
    res += (!take[i]) ? a[i] : 0;
  }
  cout << res << endl;
}

 
int main()
{
  int t = 1;
  cin >> t;
  while(t--) {
    int n, k;
    cin >> n >> k;
    ve<int> a;
    FOR(i, 0, n) {
      int x; cin >> x;
      a.pb(x);
    }
    solve(a, k);
  } 

  return 0;
}


