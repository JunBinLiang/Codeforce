// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=Int();
        for(int t=0;t<T;t++){
            int n=Int();
            int k=Int();
            int A[]=Arr(n);
            Solution sol=new Solution(out);
            sol.solution(A,k);
        }
        out.close();

    }




    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int MOD = 1000000007;
    int mod = MOD;
    public Solution(PrintWriter out) {
        this.out = out;
    }




    public void solution(int A[],int k) {
        int res[]=new int[A.length];
        int B[][]=new int[A.length][2];
        int cnt[]=new int[A.length+10];
        int sum=0;
        for(int i=0;i<A.length;i++){
            B[i][0]=A[i];
            B[i][1]=i;
            cnt[A[i]]++;
        }
        for(int i:cnt){
            sum+=Math.min(i,k);
        }



        Arrays.sort(B,(a,b)->{
            return a[0]-b[0];
        });

        long l =1,r=A.length;
        long use=-1;
        while(l<=r){
            long mid=l+(r-l)/2;
            if(sum>=mid*k){
                use=mid;
                l=mid+1;
            }
            else{
                r=mid-1;
            }
        }

        Queue<Integer>q=new LinkedList<>();
        for(int i=0;i<use;i++){
            for(int j=1;j<=k;j++){
                q.add(j);
            }
        }

        // System.out.println(use);
        //  System.out.println(Arrays.toString(cnt));

        for(int i=0;i<B.length;i++){
            int j = i;
            int x =0;
            while(j<B.length&&B[j][0]==B[i][0]){
                j++;
                x++;
            }

            x=Math.min(x,k);
            for(int y=0;y<x;y++){
                if(q.size()==0)break;
                int index=B[i+y][1];
                res[index]=q.poll();
            }

            i=j-1;
        }


        for(int i:res){
            out.print(i+" ");
        }out.println();
    }



}
