#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <queue>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define s second
#define ve vector
#define FOR(i, a, b) for (int i = a; i < b; ++i)

// Some predefined templates
template <typename T>
ostream &operator<<(ostream &out, const vector<T> &a)
{
  out << "[";
  bool first = true;
  for (auto v : a)
  {
    out << (first ? "" : ", ");
    out << v;
    first = 0;
  }
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream &operator<<(ostream &out, const map<U, T, Cmp> &a)
{
  out << "{";
  bool first = true;
  for (auto &p : a)
  {
    out << (first ? "" : ", ");
    out << p.first << ":" << p.second;
    first = 0;
  }
  out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream &operator<<(ostream &out, const unordered_map<U, T, Cmp> &a)
{
  out << "{";
  bool first = true;
  for (auto &p : a)
  {
    out << (first ? "" : ", ");
    out << p.first << ":" << p.second;
    first = 0;
  }
  out << "}";
  return out;
}

ll gcd(ll x, ll y)
{
  return (y == 0 ? x : gcd(y, x % y));
}
ll lcm(ll x, ll y)
{
  return x * y / gcd(x, y);
}

int to_int(string &s)
{
  int res = 0;
  for (char c : s)
  {
    res = res * 10 + (c - '0');
  }
  return res;
}

int MOD = 998244353;
int mod = 1000000007;
int INF = INT_MAX;


//500000004
ll divide(ll a, ll b) {
  return ((a)* ( b % mod) ) % mod;
}

void solve(ll n, ll m) {
  ll res = 0;
  for(ll i = 1; i <= m; i++) {
    if(n % i == 0) continue;
    if(i > n) {
      ll x = m - n;
      res += (((n % mod) * (x % mod)) % mod);
      res %= mod;
      break;
    }
    
    ll x = n / i;
    ll mo = n % i;
    ll add = mo / x;

    
    ll l = i % mod;
    ll r = (min(i + (add), m)) % mod;

    
    ll sum = (n % mod) * ((min((add + 1ll), (m - i + 1ll))) % mod);
    sum %= mod;

    ll a = ((((l + r) % mod) * (((r - l + mod) % mod + 1) % mod))) % mod;
    a = divide(a, 500000004);
    x %= mod;
    a *= x;
    a %= mod;


    sum -= a;
    sum += mod;
    sum %= mod;

    res += sum;
    res %= mod;
    i += add;
  }

  cout << res << endl;
}

int main()
{
  int t = 1;
  //cin >> t;
  while (t--)
  {
    ll n, m;
    cin >> n >> m;
    solve(n, m);
  }

  return 0;
}
