



import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }



    public static void main (String[] args) throws java.lang.Exception {




        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt")
        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(T,t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}


class People{
    String name;
    int age;
    public People(String name, int age) { //create instant : call
        this.name = name;
        this.age = age;
    }

    public int getAge(){
        return age;
    }
    public String getName(){
        return name;
    }
}




class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;


    public Solution(PrintWriter out, Main.FastScanner fs) {
        this.out = out;
        this.fs = fs;

    }


    public void solution(int all, int testcase) {
        int n = fs.Int();
        int m = fs.Int();
        int k = fs.Int();
        int A[] = new int[n];
        for(int i = 0; i < n;i++){
            A[i] = fs.Int();
        }




        long res = 0;
        long dp[][] = new long[n][m + 1];
        for(long p[]:dp){
            Arrays.fill(p, Long.MIN_VALUE);
        }
        dp[0][1 % m] = A[0] - k;

        for(int i = 1; i < n; i++){
            for(int j = 1; j <= m; j++){
                int x = j % m;
                if(j == 1) {
                    dp[i][x] = A[i] - k;
                    if(dp[i - 1][0] != Long.MIN_VALUE) {
                        dp[i][x] = Math.max(dp[i][x],A[i] - k + dp[i - 1][0]);
                    }
                } else {
                    if(dp[i - 1][j - 1] != Long.MIN_VALUE) {
                        dp[i][x] = Math.max(dp[i][x],A[i] + dp[i - 1][j - 1]);
                    }
                }
            }
        }



        for(long p[]:dp){
            for(long i:p){
                res = Math.max(res,i);
            }
        }
        out.println(res);
    }

}


