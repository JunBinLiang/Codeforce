// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");



        int T=Int();
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int MOD = 998244353 ;
    long mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }


    public void solution() {
        int n =fs.Int();
        int m=fs.Int();
        List<Integer>graph[]=new ArrayList[n];
        Arrays.setAll(graph,e->new ArrayList<>());
        for(int i=0;i<m;i++){
            int u=fs.Int()-1;
            int v=fs.Int()-1;
            graph[v].add(u);
            graph[u].add(v);
        }

        boolean seen[]=new boolean[n];
        int dis[]=new int[n];
        Queue<int[]>q=new LinkedList<>();
        q.add(new int[]{0,0});
        seen[0]=true;
        while(q.size()>0){
            int p[]=q.poll();
            int root=p[0],d=p[1];
            dis[root]=d%2;
            for(int next:graph[root]){
                if(!seen[next]){
                    seen[next]=true;
                    q.add(new int[]{next,d+1});
                }
            }
        }

        int cnt = 0;
        for(int i:dis){
            if(i==0)cnt++;
        }

        if(cnt*2<=n){
            out.println(cnt);
            for(int i = 0;i<dis.length;i++){
                if(dis[i]==0){
                    out.print((i+1)+" ");
                }
            }
        }
        else{
            out.println(n-cnt);
            for(int i = 0;i<dis.length;i++){
                if(dis[i]==1){
                    out.print((i+1)+" ");
                }
            }
        }
        out.println();

    }




}









