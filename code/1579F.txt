// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");
        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = 10000000;
    int MOD = 998244353 ;
    long mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }



    public void solution() {

        int t = fs.Int();
        while(t>0) {
            t--;
            int n =fs.Int();
            int d = fs.Int();
            int A[]=new int[n];
            for(int i=0;i<n;i++){
                A[i]=fs.Int();
            }

            Queue<Integer>q=new LinkedList<>();
            boolean seen[]=new boolean[n];
            for(int i=0;i<A.length;i++){
                if(A[i]==0){
                    seen[i]=true;
                    q.add(i);
                }
            }
            if(q.size()==n){
                out.println(0);
                continue;
            }

            int level = 0;
            while(q.size()>0){
                int size = q.size();
                level++;
                for(int j = 0; j<size;j++){
                    int top=q.poll();
                    int index = (top+d)%n;
                    if(!seen[index]){
                        seen[index]=true;
                        q.add(index);
                    }
                }
            }

            int cnt = 0;
            for(boolean b:seen){
                if(b)cnt++;
            }
            if(cnt==n){
                out.println(level-1);
            }
            else{
                out.println(-1);
            }
        }
    }
}

