// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;

    int match[];
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;

    }

    public void solution(int testcase) {
        int n = fs.Int();
        int A[][] = new int[n][2];
        int B[]=new int[n];
        for(int i = 0; i < n; i++){
            A[i][0]=fs.Int();
            A[i][1]=i + 1;
        }
        for(int i = 0; i < n; i++){
            B[i]=fs.Int();
        }
        Arrays.sort(A,(a,b)->{
            return a[0] - b[0];
        });
        Arrays.sort(B);
        List<int[]>res=new ArrayList<>();

        Stack<int[]>sta = new Stack<>();
        for(int i = 0; i < A.length;i++){
            if(A[i][0]==B[i])continue;
            int dif = A[i][0] - B[i];
            //System.out.println(dif);
            if(dif > 0){
                while(sta.size()>0 && dif > 0){
                    int peek[] = sta.peek();
                    int a = Math.min(peek[0],dif);
                    if(dif > peek[0]){
                        sta.pop();
                        dif -= peek[0];
                        res.add(new int[]{peek[1],A[i][1],a});
                    }else{
                        peek[0] -= dif;
                        dif = 0;
                        res.add(new int[]{peek[1],A[i][1],a});
                        if(peek[0] == 0)sta.pop();
                        break;
                    }
                }
                if(dif!=0){
                    out.println("NO");
                    return;
                }
            }
            else{
                sta.add(new int[]{-dif, A[i][1]});
            }
        }



        if(sta.size()!=0){
            out.println("NO");
            return;
        }

        out.println("YES");
        out.println(res.size());
        for(int p[]:res){
            out.println(p[0]+" "+p[1]+" "+p[2]);
        }
    }






}

//2 2 4 7 9
//4 5 5 5 5

