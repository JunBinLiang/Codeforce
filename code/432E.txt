// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");



        int T=1;
        for(int t=0;t<T;t++){
            int n=Int();
            int m=Int();

            Solution sol1=new Solution(out);
            sol1.solution(n,m);
        }
        out.close();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int MOD = 1000000007;
    long mod = 1000000007;

    public Solution(PrintWriter out) {
        this.out = out;
    }


    char B[]=new char[]{'A','B','C','D','E','F'};
    public void solution(int n,int m) {
        char A[][]=new char[n][m];
        for(int i=0;i<A.length;i++){
            Arrays.fill(A[i],'Z');
        }

        for(int i =0;i<n;i++){
            for(int j=0;j<m;j++){
                if(A[i][j]!='Z')continue;
                char put = get1(A,i,j);
                int size = 1;
                while(i+size<n&&j+size<m&&A[i][j+size]=='Z'){
                    char other = get1(A,i,j+size);
                    if(other==put){
                        size++;
                    }
                    else{
                        break;
                    }
                }
                for(int r=i;r<i+size;r++){
                    for(int c=j;c<j+size;c++){
                        A[r][c]=put;
                    }
                }
            }
        }

        print(A);

    }


    public char get1(char A[][],int r,int c){
        for(int i=0;i<B.length;i++){
            int c1 = get(A,r-1,c);
            int c2 = get(A,r+1,c);
            int c3 = get(A,r,c+1);
            int c4 = get(A,r,c-1);
            if(B[i]==c1||B[i]==c2||B[i]==c3||B[i]==c4)continue;
            return B[i];
        }
        return 'Z';
    }

    public char get(char A[][],int i,int j){
        if(i<0||j<0||i>=A.length||j>=A[0].length){
            return 'Z';
        }
        return A[i][j];
    }

    public void print(char A[][]){
        for(int i=0;i<A.length;i++){
            out.println(new String(A[i]));
        }
    }




}
