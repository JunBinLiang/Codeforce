// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");

        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }




    public void solution(int testcase) {
        int t = fs.Int();
        while(t>0){
            t--;
            String s = fs.Str();
            boolean flag = false;
            char A[]=s.toCharArray();
            int n = s.length();

            int cnt[]=new int[10];
            int index = -1;
            int mx = -1;
            for(int i = 0; i < n;i++){
                if(A[i]=='0'){
                    cnt[0]++;
                }
                else{
                    if(i==0&&A[i]=='1'){

                    }
                    else{
                        for(int j = A[i]-'0' - 1; j >=0 ;j--){
                            int odd = 0;
                            cnt[j]++;
                            for(int x:cnt){
                                if(x%2==1)odd++;
                            }
                            cnt[j]--;
                            int remain = n - (i + 1);
                            if(remain >= odd){
                                flag = true;
                                index=i;
                                mx = j;
                                break;
                            }
                        }
                    }
                    cnt[A[i]-'0']++;
                }
            }

            //System.out.println(index+" "+mx);

            if(!flag){
                out.println(get(n-2));
            }
            else{
                cnt=new int[10];
                StringBuilder str = new StringBuilder();
                for(int i = 0; i < index;i++){
                    cnt[A[i]-'0']++;
                    str.append(A[i]);
                }
                str.append(mx+"");
                cnt[mx]++;
                int odd = 0;
                for(int x:cnt){
                    odd += (x%2);
                }

                int nine = n - odd - str.length();
                for(int i = 0; i < nine;i++){
                    str.append("9");
                }

                for(int i = 9; i >=0; i--){
                    if(cnt[i]%2==1){
                        str.append(i+"");
                    }
                }
                out.println(str.toString());
            }
        }
    }


    public String get(int n){
        StringBuilder str = new StringBuilder();
        while(n>0){
            n--;
            str.append("9");
        }
        return str.toString();
    }

}
