/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>
#include <string>
#include <cstring>
using namespace std;
long long dp[501][501];
long long cur[501][501];

int n, m, mmod;


long long C(int n) {
    return ((n + 0ll) * (n - 1) / 2) % mmod;
}

int main()
{
    
    cin>>n>>m>>mmod;
    int cols[501];
    memset(cols, 0, sizeof(cols));
    memset(dp, 0, sizeof(dp));
    int two = 0, one = 0;
    for(int i = 0; i < m; i++){
        string s; cin>>s;
        for(int j = 0; j < s.size(); j++) {
            if(s[j] == '1'){
                cols[j]++;
            }
        }
    }
    
    for(int i = 0; i < n; i++) {
        if(cols[i] == 1)one++;
        if(cols[i] == 2)two++;
    }
    dp[n - two - one][one] = 1;
    int cnt = 0;
    for(int i = 0; i < n - m; i++) {
        memset(cur, 0, sizeof(cur));
        for(int x = 0; x <=n; x++) {//0
            for(int y = 0; y <= n; y++) {//1
                if(x + y > n)break;
                if(dp[x][y] == 0) continue;
                if(y >= 2 && x + (y - 2) <= n) {
                    cur[x][y - 2] += dp[x][y] * C(y);
                    cur[x][y - 2] %= mmod;
                }

                if(y + 2 <= n && x - 2 >= 0 && (x + y) <= n) {
                    cur[x - 2][y + 2] += dp[x][y] * C(x);
                    cur[x - 2][y + 2] %= mmod;
                }

                if(x - 1 >= 0 && (x - 1 + y) <= n) {
                    cur[x - 1][y] += dp[x][y] * (x) * (y);
                    cur[x - 1][y] %= mmod;
                }
            }
        }
        for(int x = 0; x <= n; x++){
           for(int y = 0; y <= n; y++){
                dp[x][y] = cur[x][y];
            }
        }
    }
    cout<<dp[0][0];
    return 0;
}

