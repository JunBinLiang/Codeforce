#include<iostream>
#include<vector>
#include<string>
#include<map>
#include<unordered_map>
#include<set>
#include<unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define s second

//Some predefined templates
template <typename T>
ostream& operator <<(ostream& out, const vector<T>& a) {
  out << "["; bool first = true;
  for (auto v : a) { out << (first ? "" : ", "); out << v; first = 0;} 
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream& operator <<(ostream& out, const unordered_map<U, T, Cmp>& a) {
  out << "{"; bool first = true;
  for (auto& p : a) { out << (first ? "" : ", "); out << p.first << ":" << p.second; first = 0;} out << "}";
  return out;
}


int to_int(string& s) {
  int res = 0;
  for(char c : s) {
    res = res * 10 + (c - '0');
  }
  return res;
}

int MOD = 998244353;
int mod = 1000000007;
int INF = INT_MAX;

int pos[200000 + 10];
void solve(vector<int>& a, int k) {
  
  int n = a.size();
  for(int i = 0; i < n; i++) {
    pos[a[i]] = i;
  }

  vector<int> b;
  ll sum = 0, per = 1;
  for(int i = n; i >= n - k + 1; i--) {
    b.push_back(pos[i]);
    sum += i;
  }
  //b.push_back(n);

  sort(b.begin(), b.end());
  for(int i = 1; i < b.size();i++) {
    ll cnt = b[i] - b[i - 1];
    per *= (cnt);
    per %= MOD;
  }
  if(k == 1)per = 1;
  cout<< sum << " " << per << endl;
}

int main()
{
  int t = 1;
  while(t--) {
    int n, k; cin >> n >> k;
    vector<int>a(n);
    for(int i = 0; i < n; i++) {
      cin >> a[i];
    }
    solve(a, k);
  } 

  return 0;
}

