// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;

    int match[];
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;

    }

    public void solution(int testcase) {
        int n = fs.Int();
        int m =fs.Int();
        int indexs[]=new int[21];
        int A[]=new int[n];
        Arrays.fill(indexs,n + 10);

        int post[][]=new int[n][21];
        for(int p[]:post)Arrays.fill(p, n + 10);

        for(int i = 0; i < n; i++){
            int x =fs.Int();
            A[i] = x;
        }

        for(int j = 0; j < 21; j++){
            if((A[n - 1] & (1 << j)) != 0){
                indexs[j] = n - 1;
                post[n - 1][j] = n -1;
            }
        }

        for(int i = n - 2; i >= 0; i--){
            int x = A[i];
            for(int j = 0; j < 21; j++){
                if((x & (1 << j)) != 0){
                    int next = indexs[j];
                    if(next < n){
                        for(int y = 0; y < 21; y++){
                            post[i][y] = Math.min(post[i][y],post[next][y]);
                        }
                    }
                    post[i][j] = Math.min(post[i][j],i);
                    indexs[j] = i;
                }
            }
        }

        //for(int p[]:post){
            //System.out.println(Arrays.toString(p));
        //}



        String yes = "Shi";
        String no = "Fou";
        for(int i = 0; i < m;i++){
            int l = fs.Int()-1;
            int r = fs.Int()-1;
            int x = A[r];
            boolean flag = false;
            for(int j = 0; j < 21;j++){
                if((x&(1<<j))!=0){
                    if(post[l][j] <= r){
                        flag = true;break;
                    }
                }
            }
            if(flag)out.println(yes);
            else out.println(no);
        }
    }






}
