// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");

        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }


    public void solution(int testcase) {
        int n =fs.Int();
        int m = fs.Int();
        int A[][]=new  int[n][m];
        int l = Integer.MAX_VALUE;
        int r = Integer.MIN_VALUE;
        for(int i = 0; i < n;i++){
            for(int j = 0; j < m;j++){
                A[i][j]=fs.Int();
                l = Math.min(l,A[i][j]);
                r = Math.max(r,A[i][j]);
            }
        }
        int res = -1;
        while(l<=r){
            int mid = l + (r - l) / 2;
            if(check(A,mid)){
                res = mid;
                l = mid + 1;
            }else{
                r = mid - 1;
            }
        }
        out.println(res);
    }

    public boolean check(int A[][],int mid){
        int m = A[0].length;
        boolean match[][]=new boolean[m][m];
        for(int i = 0; i < A.length;i++){
            List<Integer>list=new ArrayList<>();
            for(int j = 0; j < A[0].length;j++){
                if(A[i][j]>=mid){
                    list.add(j);
                }
            }

            for(int x = 0; x < list.size(); x++){
                for(int y = x + 1; y < list.size();y++){
                    int a = list.get(x);
                    int b =list.get(y);
                    if(match[a][b])return true;
                    match[a][b]=true;
                }
            }
        }
        return false;
    }



}




