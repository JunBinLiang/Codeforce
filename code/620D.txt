// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");

        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = 10000000;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }




    public void solution() {
        int n = fs.Int();
        int A[]=new int[n];
        long sum1 = 0;
        long sum2 = 0;
        for(int i = 0; i < n;i++){
            A[i]=fs.Int();
            sum1 += A[i];
        }
        int m = fs.Int();
        int B[]=new int[m];
        for(int i = 0; i < m;i++){
            B[i]=fs.Int();
            sum2 += B[i];
        }

        long mn = Math.abs(sum1 - sum2);
        List<int[]>res = new ArrayList<>();

        //do 1 swap
        int a = -1;
        int b = -1;
        int c = -1;
        int d = -1;
        boolean one = false;
        boolean two = false;
        for(int i = 0; i < n;i++){
            for(int j = 0; j < m;j++){
                long s1 = sum1 - A[i] + B[j];
                long s2 = sum2 - B[j] + A[i];
                long dif = Math.abs(s1-s2);
                if(dif<mn){
                    mn = dif;
                    one = true;
                    a = i;
                    b = j;
                }
            }
        }
        int len_a1 = ((n* (n-1) / 2));
        int len_a2 = ((m* (m-1) / 2));
        List<int[]>l1=new ArrayList<>(len_a1);
        List<int[]>l2=new ArrayList<>(len_a2);
        for(int i = 0; i < n;i++){
            for(int j = i +1;j<n;j++){
                int sum = A[i] + A[j];
                l1.add(new int[]{sum,i,j});
            }
        }

        for(int i = 0; i < m;i++){
            for(int j = i +1;j<m;j++){
                int sum = B[i] + B[j];
                l2.add(new int[]{sum,i,j});
            }
        }

        Collections.sort(l1,(x,y)->{
            if(x[0]<y[0])return -1;
            else if(x[0]==y[0])return 0;
            else return 1;
        });
        Collections.sort(l2,(x,y)->{
            if(x[0]<y[0])return -1;
            else if(x[0]==y[0])return 0;
            else return 1;
        });



        int i = 0, j = 0;
        while(i<l1.size()&&j<l2.size()){
            long add1 = l1.get(i)[0];
            long add2 = l2.get(j)[0];
            long s1 = sum1 + add2*2;
            long s2 = sum2 + add1 * 2;
            long dif = Math.abs(s1-s2);
            if(dif<mn){
                mn = dif;
                res=new ArrayList<>();
                int p1[]=l1.get(i);
                int p2[]=l2.get(j);
                two = true;
                a = p1[1];b=p2[1];
                c = p1[2];d=p2[2];
            }
            if(s1>s2){
                i++;
            }
            else{
                j++;
            }

        }


        out.println(mn);
        if(!one&&!two){
            out.println(0);
        }
        else if(!two){
            out.println(1);
            out.println((a+1)+" "+(b+1));
        }
        else{
            out.println(2);
            out.println((a+1)+" "+(b+1));
            out.println((c+1)+" "+(d+1));
        }

    }



}
