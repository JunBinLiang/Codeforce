// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");

        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = 10000000;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }




    public void solution() {
        int MAX = 30000 + 10;
        TreeSet<Integer>trees[]=new TreeSet[MAX+1];
        for(int i = 1; i <= MAX;i++){
            trees[i] = new TreeSet<>();
            for(int j = i; j <= MAX; j += i){
                trees[i].add(j);
            }
        }

        int t = fs.Int();
        while(t>0){
            t--;
            int a = fs.Int();
            int b = fs.Int();
            int c = fs.Int();
            int x = -1, y = -1, z = -1;
            int res = Integer.MAX_VALUE;

            for(int i = 1; i <= MAX;i++){
                int dif1 = Math.abs(i-a);
                if(dif1>res)continue;
                for(int j = i; j <= MAX; j+=i){
                    int dif2 = Math.abs(j-b);
                    if(dif1+dif2>res)continue;
                    TreeSet<Integer>tree=trees[j];
                    Integer lo = tree.floor(c);
                    Integer hi = tree.ceiling(c);
                    int dif3 = 1000000;
                    if(lo!=null){
                        int sum = dif1 + dif2 + Math.abs(lo-c);
                        if(sum<res){
                            res = sum;
                            x = i;
                            y = j;
                            z = lo;
                        }
                    }
                    if(hi!=null){
                        int sum = dif1 + dif2 + Math.abs(hi-c);
                        if(sum<res){
                            res = sum;
                            x = i;
                            y = j;
                            z = hi;
                        }
                    }
                }
            }

            out.println(res);
            out.println(x+" "+y+" "+z);
        }
    }


}







