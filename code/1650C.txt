#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <queue>
using namespace std;
using ll = long long;

#define pb push_back
#define f first
#define se second
#define ve vector
#define FOR(i, a, b) for (int i = a; i < b; ++i)
#define RFOR(i, a, b) for (int i = a; i >= b; i--)

// Some predefined templates
template <typename T>
ostream &operator<<(ostream &out, const vector<T> &a)
{
  out << "[";
  bool first = true;
  for (auto v : a)
  {
    out << (first ? "" : ", ");
    out << v;
    first = 0;
  }
  out << "]";
  return out;
}

template <typename U, typename T, class Cmp>
ostream &operator<<(ostream &out, const map<U, T, Cmp> &a)
{
  out << "{";
  bool first = true;
  for (auto &p : a)
  {
    out << (first ? "" : ", ");
    out << p.first << ":" << p.second;
    first = 0;
  }
  out << "}";
  return out;
}

template <typename U, typename T, class Cmp>
ostream &operator<<(ostream &out, const unordered_map<U, T, Cmp> &a)
{
  out << "{";
  bool first = true;
  for (auto &p : a)
  {
    out << (first ? "" : ", ");
    out << p.first << ":" << p.second;
    first = 0;
  }
  out << "}";
  return out;
}

ll gcd(ll x, ll y)
{
  return (y == 0 ? x : gcd(y, x % y));
}
ll lcm(ll x, ll y)
{
  return x * y / gcd(x, y);
}

int to_int(string &s)
{
  int res = 0;
  for (char c : s)
  {
    res = res * 10 + (c - '0');
  }
  return res;
}

int MOD = 998244353;
int mod = 1000000007;
int INF = INT_MAX;


bool com(ve<int>& a, ve<int>& b) {
  return a[1] < b[1];
}

void solve(ve<ve<int>>& a, int m) {
  
  m *= 2;
  sort(a.begin(), a.end(), com);
  ve<ve<int>> res;
  ll sum = 0;
  for(int i = 0; i < m; i++) {
    res.pb({a[i][0], a[i][2]});
    sum += a[i][1];
  }

  sort(res.begin(), res.end());
  
  int l = 0, r = res.size() - 1;
  cout << sum << endl;
  while(l < r) {
    cout << res[l][1] << " " << res[r][1] << endl;
    l++;
    r--;
  }
}

int main()
{
  int t = 1;
  cin >> t;
  while (t--)
  {
    int n, m; 
    cin >> n >> m;
    ve<ve<int>> a;
    for(int i = 0; i < m; i++) {
      int x, y; cin >> x >> y;
      a.pb({x, y, i + 1});
    }
    solve(a, n);
  }

  return 0;
}
