// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner in=new Scanner(System.in);
        //Scanner in=new Scanner(new File("input.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");


        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution(t);
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = Integer.MAX_VALUE;
    int NINF = Integer.MIN_VALUE;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;

    int match[];
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;

    }

    public void solution(int testcase) {
        String s = fs.Str();
        String t = fs.Str();
        int n = s.length();
        long dp[][] = new long[s.length()][s.length()];
        for(int i = 0; i < n; i++){
            if(i >= t.length()){
                dp[i][i]=2;
            }else{

            }
        }

        for(int i = 0; i < t.length();i++){
            if(t.charAt(i)==s.charAt(0)){
                dp[i][i]=2;
            }
        }


        for(int i = 1; i < n;i++){
            for(int l = 0; l < n; l++){
                if(l + i >= n)continue;
                int r = l + i;
                char c = s.charAt(i);
                if(r >= t.length() || c == t.charAt(r)){
                    dp[l][r] += dp[l][r- 1];
                    dp[l][r] %= MOD;
                }
                if(l >= t.length() || c == t.charAt(l)){
                    dp[l][r] += dp[l+1][r];
                    dp[l][r] %= MOD;
                }
                dp[l][r] %= MOD;
            }
        }


        long res = 0;
        for(int i = t.length()-1;i<dp.length;i++){
            res += dp[0][i];
            res %= MOD;
        }
        out.println(res);
    }






}
