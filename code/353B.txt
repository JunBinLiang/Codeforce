// Don't place your source in a package


import javax.swing.*;
import java.lang.reflect.Array;
import java.text.DecimalFormat;
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.Stream;



// Please name your class Main
public class Main {
    static FastScanner fs=new FastScanner();
    static class FastScanner {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next() {
            while (!st.hasMoreElements())
                try {
                    st=new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            return st.nextToken();
        }
        int Int() {
            return Integer.parseInt(next());
        }

        long Long() {
            return Long.parseLong(next());
        }

        String Str(){
            return next();
        }
    }


    public static void main (String[] args) throws java.lang.Exception {
        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
        //reading /writing file
        //Scanner sc=new Scanner(new File("src/text.txt"));
        //PrintWriter pr=new PrintWriter("output.txt");
        //File file = new File("src/text.txt");

        int T=1;
        for(int t=0;t<T;t++){
            Solution sol1=new Solution(out,fs);
            sol1.solution();
        }
        out.flush();

    }


    public static int[] Arr(int n){
        int A[]=new int[n];
        for(int i=0;i<n;i++)A[i]=Int();
        return A;
    }
    public static int Int(){
        return fs.Int();
    }
    public static long Long(){
        return fs.Long();
    }
    public static String Str(){
        return fs.Str();
    }

}








class Solution {
    PrintWriter out;
    int INF = 10000000;
    int MOD = 998244353;
    int mod = 1000000007;
    Main.FastScanner fs;
    public Solution(PrintWriter out,Main.FastScanner fs) {
        this.out = out;
        this.fs=fs;
    }




    public void solution() {
        int n = fs.Int();
        int A[]=new int[n * 2];
        int cnt[]=new int[102];

        for(int i = 0; i < n * 2; i++){
            A[i]=fs.Int();
            cnt[A[i]]++;
        }

        int res[]=new int[A.length];
        int B[][]=new int[A.length][2];
        for(int i = 0; i < A.length;i++){
            B[i][0] = A[i];
            B[i][1] = i;
        }

        Arrays.sort(B,(a,b)->{
            if(cnt[a[0]]==cnt[b[0]])return a[0]-b[0];
            return cnt[a[0]]-cnt[b[0]];
        });


        int l = 0;
        int r = 0;

        for(int i = 0; i < B.length;i++){
            int num = B[i][0];
            int index=B[i][1];
            if(cnt[num]!=1)break;
            if(i%2==0){
                l++;
                res[index]=1;
            }
            else{
                r++;
                res[index]=2;
            }
        }


        for(int i = 0; i < B.length;i++){
            int num = B[i][0];
            if(cnt[num]==1)continue;
            int j = i;
            List<Integer>list=new ArrayList<>();
            while(j<B.length&&B[j][0]==B[i][0]){
                list.add(B[j][1]);
                j++;
            }


            i=j-1;
            int a = list.get(0);
            int b = list.get(1);
            res[a]=1;
            res[b]=2;
            l++;
            r++;
        }

        int mx = l * r;
        for(int i = 0; i < B.length;i++){
            int num = B[i][0];
            if(cnt[num]==1)continue;
            int j = i;
            List<Integer>list=new ArrayList<>();
            while(j<B.length&&B[j][0]==B[i][0]){
                list.add(B[j][1]);
                j++;
            }
            i=j-1;

            for(int x=2;x<list.size();x++){
                if(l<n){
                    res[list.get(x)]=1;
                    l++;
                }
                else{
                    res[list.get(x)]=2;
                    r++;
                }
            }
        }


        out.println(mx);
        for(int i:res){
            out.print(i+" ");
        }


    }



}







